The Python script `harminckilenc.py` uses the `turtle` module to draw regular polygons based on user input. Here’s a detailed breakdown of the functionality within the script:

1. **Importing the Module:**
   The script starts by importing the `turtle` module, which is a popular way to introduce programming to beginners. It provides a drawing board (canvas) and a turtle (pen) that can be controlled programmatically to create illustrations.

2. **Defining the `paint` Function:**
   - `paint(number)`: This function takes an integer `number`, which represents the number of sides of a regular polygon.
   - Inside the function:
     - `turtle.resetscreen()`: Clears the screen and resets the turtle's state.
     - `s = turtle.getscreen()`: Retrieves the turtle screen and stores it in variable `s` (which is not used further in the script).
     - `t = turtle.Turtle()`: Creates a new turtle object for drawing.
     - `szog = 180 - (((number - 2) * 180)/number)`: Computes the internal angle to turn the turtle by, ensuring the sides connect to form a regular polygon.
     - A for-loop is used to direct the turtle to turn left by `szog` degrees and move forward by 100 units, repeated `number` times to complete the polygon.

3. **Main Loop:**
   - An infinite loop (`while True`) asks the user for input to determine the number of sides (`n`) of the polygon they wish to draw.
   - Input is taken via the command `int(input("Milyen szabályos poligont szeretne? "))`, which translates to "What kind of regular polygon would you like?" in English.
   - The script checks if `n` is between 3 and 9 (inclusive). If it is, the `paint` function is called to draw the polygon.
   - If the input is not between 3 and 9, a message "Ilyet nem tudok :c" ("I can't do that :c") is printed, and the loop is broken, thus ending the script.

**Usage:**
This script primarily serves educational purposes, showcasing how functions, loops, and conditional statements work in a visual and interactive way. Users can visualize different polygons and get a grasp of geometric calculations and basic programming constructs.